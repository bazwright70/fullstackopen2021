{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bazwr\\\\Documents\\\\fullstackopen2021\\\\Part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //  button component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  label,\n  handler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handler,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}; // indiv stat component\n\n\n_c = Button;\n\nconst Stat = ({\n  label,\n  val\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; // App component\n\n\n_c2 = Stat;\n\nfunction App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = stat => {\n    switch (stat) {\n      case 'good':\n        setGood(good + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n\n      case 'bad':\n        setBad(bad + 1);\n        break;\n    }\n  };\n\n  const getAll = () => {\n    return good + bad + neutral;\n  };\n\n  const getAverage = () => {\n    return ((good - bad) / (good + bad + neutral)).toFixed(1);\n  };\n\n  const getPositive = () => {\n    return (good / (good + bad + neutral) * 100).toFixed(1) + '%';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give Your Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handler: () => handleClick('good'),\n      label: \" Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handler: () => handleClick('neutral'),\n      label: \" Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handler: () => handleClick('bad'),\n      label: \" Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), getAll() > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Good\",\n        val: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Neutral\",\n        val: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Bad\",\n        val: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Total\",\n        val: getAll()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Average\",\n        val: getAverage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        label: \"Positive\",\n        val: getPositive()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Stat\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/bazwr/Documents/fullstackopen2021/Part1/unicafe/src/App.js"],"names":["React","useState","Button","label","handler","Stat","val","App","good","setGood","neutral","setNeutral","bad","setBad","handleClick","stat","getAll","getAverage","toFixed","getPositive"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\n\n//  button component\nconst Button = ({label, handler}) => {\n  return(\n    <button onClick={handler}>{label}</button>\n  )\n}\n// indiv stat component\nconst Stat = ({label, val}) => {\n  return (\n    <tr>\n      <td>{label}</td><td>{val}</td>\n    </tr>\n  )\n}\n\n// App component\nfunction App() {\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = (stat) => {\n    switch(stat){\n      case 'good': setGood(good +1);\n                  break;\n      case 'neutral': setNeutral(neutral +1);\n                  break;\n      case 'bad': setBad(bad +1);\n                  break;\n    }\n  }\n\n  const getAll = () => {\n    return good + bad + neutral\n  }\n  const getAverage = () => {\n    return ((good - bad) / (good+bad+neutral)).toFixed(1);\n  }\n  const getPositive = () => {\n    return ((good)/(good+bad+neutral)*100).toFixed(1)+'%';\n  }\n\n    return (\n    <div >\n      <h2>Give Your Feedback</h2>\n        <Button handler={()=>handleClick('good')} label=' Good' />\n        <Button handler={()=>handleClick('neutral')} label=' Neutral' />\n        <Button handler={()=>handleClick('bad')} label=' Bad' />\n      <h2>Statistics</h2>\n      {\n        getAll() > 0 &&  \n        <table> \n          <Stat label='Good' val={good}/>\n          <Stat label='Neutral' val={neutral}/>\n          <Stat label='Bad' val={bad}/>\n          <Stat label='Total' val={getAll()}/>\n          <Stat label='Average' val={getAverage()}/>\n          <Stat label='Positive' val={getPositive() }/>\n        </table>\n      }\n       \n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}